USE PoMoMin
GO

CREATE PROCEDURE UPDATE_EMPLEADO
	@ID BIGINT,
	@NOMBRES NVARCHAR(100),
	@APELLIDOS NVARCHAR(100),
	@IDENTIFICACION NVARCHAR(100),
	@SUCURSALID INT,
	@PUESTOID INT,
	@REPORTAA BIGINT,
	@CELULAR NVARCHAR(100),
	@TELTRABAJO NVARCHAR(100),
	@DIRECCION NVARCHAR(150),
	@GENERO NVARCHAR(15),
	@FECHANACIMIENTO DATE,
	@FECHAALTA DATE,
	@FECHABAJA DATE,
	@ESTADOID INT,
	-- @FECHAREGISTRO DEFAULT GETDATE() DESDE CREACION DE TABLA
	@NOTAS NTEXT,
	-- DATOS PARA BITACORA
	@USUARIOBITA NVARCHAR(100),
	@DISPOSITIVO NVARCHAR(200),
	-- RECUPERAR RESULTADO
	@RESULT BIGINT OUTPUT
AS
DECLARE @MENSAJE AS VARCHAR(100);
BEGIN TRY
BEGIN TRANSACTION
	IF @ID IS NULL OR @ESTADOID IS NULL
	   BEGIN
			RAISERROR('Algunos parámetros no pueden ser nulos', 16, 1)
			SET @RESULT = 0;
		END
	IF EXISTS(SELECT Identificacion FROM Empleados WHERE Identificacion = @IDENTIFICACION  AND EmpleadoID <> @ID)
	   BEGIN
			RAISERROR('El numero de identidad ya existe en la base', 16, 1)
			SET @RESULT = 0;
		END
	UPDATE Empleados
	SET Nombres = COALESCE(@NOMBRES, Nombres),
		Apellidos = COALESCE(@APELLIDOS, Apellidos),
		Identificacion = COALESCE(@IDENTIFICACION, Identificacion), 
		SucursalID = COALESCE(@SUCURSALID, SucursalID),
		PuestoID = COALESCE(@PUESTOID, PuestoID),
		ReportaA = @REPORTAA,
		TelefonoCelular = @CELULAR,
		TelefonoTrabajo = @TELTRABAJO, 
		Direccion = @DIRECCION,
		Genero = COALESCE(@GENERO, Genero),
		FechaNacimiento = COALESCE(@FECHANACIMIENTO, FechaNacimiento),
		FechaAlta = COALESCE(@FECHAALTA, FechaAlta), 
		FechaBaja = @FECHABAJA,
		EstadoID = COALESCE(@ESTADOID, EstadoID),
		Notas = @NOTAS
	WHERE EmpleadoID = @ID
	
	IF @ESTADOID <> 2 -- INACTIVO
	BEGIN
		SET @MENSAJE = 'Actualización de empleado con ID: ' + CAST(@ID AS VARCHAR);
		-- BITACORA
		EXEC INSERT_BITACORA @USUARIOBITA, 'UPDATE', 'COMPLETADO EXITOSAMENTE', @MENSAJE, @DISPOSITIVO;
	END
	ELSE	
	BEGIN
		-- PONER EL EMPLEADO COMO DE BAJA
		UPDATE Empleados
		SET FechaBaja = GETDATE()
		WHERE EmpleadoID = @ID

		-- LIBERAR TODO EL INVENTARIO QUE SE HABIA ASIGNADO A ESE EMPLEADO
		UPDATE Inventario
		SET AsignadoA = NULL
		WHERE AsignadoA = @ID

		-- MARCAR EL INVENTARIO EN EL HISTORICO COMO DISPONIBLE POR MOTIVO DE DESACTIVACION DE EMPLEADO
		UPDATE InventarioEmpleados
		SET FechaFin = GETDATE(),
			MotivoDesasignacionID = 9
		WHERE EmpleadoID = @ID AND FechaFin IS NULL


		SET @MENSAJE = 'Desactivación de empleado con ID: ' + CAST(@ID AS VARCHAR);
		-- BITACORA
		EXEC INSERT_BITACORA @USUARIOBITA, 'DEACTIVATE', 'COMPLETADO EXITOSAMENTE', @MENSAJE, @DISPOSITIVO;
	END
	SET @RESULT = 1;
COMMIT TRANSACTION
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION
	SET @MENSAJE = 'Mensaje de error:' + ERROR_MESSAGE();
	EXEC INSERT_BITACORA @USUARIOBITA, 'UPDATE', 'NO COMPLETADO', @MENSAJE, @DISPOSITIVO;
	SET @RESULT = 0;
END CATCH
GO